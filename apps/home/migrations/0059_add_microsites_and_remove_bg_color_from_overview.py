# Generated by Django 3.2.16 on 2022-11-02 16:45

from django.db import migrations, models
import django.db.models.deletion
import wagtail.blocks
import wagtail.fields
import wagtail.images.blocks
import wagtailmetadata.models


class Migration(migrations.Migration):

    dependencies = [
        ('wagtailcore', '0078_referenceindex'),
        ('apps_images', '0004_alter_customimage_file_hash'),
        ('apps_home', '0058_alter_streamfield_field'),
    ]

    operations = [
        migrations.CreateModel(
            name='MicrositeDetailPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('page_title_de', models.CharField(max_length=120)),
                ('page_title_en', models.CharField(blank=True, max_length=120)),
                ('page_title_de_ls', models.CharField(blank=True, max_length=120)),
                ('body_de', wagtail.fields.StreamField([('paragraph', wagtail.blocks.StructBlock([('body', wagtail.blocks.RichTextBlock(help_text='For accessibility please make sure that you do not\n                            leave out levels when using the headlines. That\n                            means, that there should always be an h2 before\n                            using an h3.', required=True))])), ('faq_accordion', wagtail.blocks.StructBlock([('faq_title', wagtail.blocks.CharBlock(max_length=150, required=False)), ('accordion_items', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(max_length=130, verbose_name='FAQ Question')), ('body', wagtail.blocks.RichTextBlock(help_text='For accessibility please make sure that you do not\n                            leave out levels when using the headlines. That\n                            means, that there should always be an h2 before\n                            using an h3.', required=False, verbose_name='FAQ Answer'))])))])), ('text_with_image', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(required=True)), ('body', wagtail.blocks.TextBlock(max_length=800, required=True)), ('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('image_alignment', wagtail.blocks.ChoiceBlock(choices=[('left', 'left'), ('right', 'right')], help_text='How should the image be aligned?', icon='cup'))])), ('quote', wagtail.blocks.StructBlock([('quote', wagtail.blocks.CharBlock(required=True)), ('author', wagtail.blocks.CharBlock(required=False))]))], use_json_field=True)),
                ('body_en', wagtail.fields.StreamField([('paragraph', wagtail.blocks.StructBlock([('body', wagtail.blocks.RichTextBlock(help_text='For accessibility please make sure that you do not\n                            leave out levels when using the headlines. That\n                            means, that there should always be an h2 before\n                            using an h3.', required=True))])), ('faq_accordion', wagtail.blocks.StructBlock([('faq_title', wagtail.blocks.CharBlock(max_length=150, required=False)), ('accordion_items', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(max_length=130, verbose_name='FAQ Question')), ('body', wagtail.blocks.RichTextBlock(help_text='For accessibility please make sure that you do not\n                            leave out levels when using the headlines. That\n                            means, that there should always be an h2 before\n                            using an h3.', required=False, verbose_name='FAQ Answer'))])))])), ('text_with_image', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(required=True)), ('body', wagtail.blocks.TextBlock(max_length=800, required=True)), ('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('image_alignment', wagtail.blocks.ChoiceBlock(choices=[('left', 'left'), ('right', 'right')], help_text='How should the image be aligned?', icon='cup'))])), ('quote', wagtail.blocks.StructBlock([('quote', wagtail.blocks.CharBlock(required=True)), ('author', wagtail.blocks.CharBlock(required=False))]))], blank=True, use_json_field=True)),
                ('body_de_ls', wagtail.fields.StreamField([('paragraph', wagtail.blocks.StructBlock([('body', wagtail.blocks.RichTextBlock(help_text='For accessibility please make sure that you do not\n                            leave out levels when using the headlines. That\n                            means, that there should always be an h2 before\n                            using an h3.', required=True))])), ('faq_accordion', wagtail.blocks.StructBlock([('faq_title', wagtail.blocks.CharBlock(max_length=150, required=False)), ('accordion_items', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(max_length=130, verbose_name='FAQ Question')), ('body', wagtail.blocks.RichTextBlock(help_text='For accessibility please make sure that you do not\n                            leave out levels when using the headlines. That\n                            means, that there should always be an h2 before\n                            using an h3.', required=False, verbose_name='FAQ Answer'))])))])), ('text_with_image', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(required=True)), ('body', wagtail.blocks.TextBlock(max_length=800, required=True)), ('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('image_alignment', wagtail.blocks.ChoiceBlock(choices=[('left', 'left'), ('right', 'right')], help_text='How should the image be aligned?', icon='cup'))])), ('quote', wagtail.blocks.StructBlock([('quote', wagtail.blocks.CharBlock(required=True)), ('author', wagtail.blocks.CharBlock(required=False))]))], blank=True, use_json_field=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.RemoveField(
            model_name='overviewpage',
            name='background_color',
        ),
        migrations.CreateModel(
            name='MicrositeOverviewPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('page_title_de', models.CharField(max_length=120)),
                ('page_title_en', models.CharField(blank=True, max_length=120)),
                ('page_title_de_ls', models.CharField(blank=True, max_length=120)),
                ('page_intro_de', wagtail.fields.RichTextField(blank=True, default='', help_text='For accessibility please make sure that you do not\n                            leave out levels when using the headlines. That\n                            means, that there should always be an h2 before\n                            using an h3.', verbose_name='Overview page introduction')),
                ('page_intro_en', wagtail.fields.RichTextField(blank=True, default='', help_text='For accessibility please make sure that you do not\n                            leave out levels when using the headlines. That\n                            means, that there should always be an h2 before\n                            using an h3.', verbose_name='Overview page introduction')),
                ('page_intro_de_ls', wagtail.fields.RichTextField(blank=True, default='', help_text='For accessibility please make sure that you do not\n                            leave out levels when using the headlines. That\n                            means, that there should always be an h2 before\n                            using an h3.', verbose_name='Overview page introduction')),
                ('body_de', wagtail.fields.StreamField([('teaser_columns', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(max_length=130)), ('column_count', wagtail.blocks.ChoiceBlock(choices=[('2', 'two columns'), ('3', 'three columns')], help_text='Only add this number of columns below', icon='cup')), ('column', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('title', wagtail.blocks.CharBlock(max_length=130)), ('body', wagtail.blocks.TextBlock(blank=True, max_length=500, rows=3)), ('button', wagtail.blocks.StructBlock([('internal_link', wagtail.blocks.PageChooserBlock(required=False)), ('external_link', wagtail.blocks.URLBlock(required=False)), ('link_text', wagtail.blocks.TextBlock(label='Link Text', max_length=50)), ('link_description', wagtail.blocks.TextBlock(help_text='describe link for assistive technology if needed', label='Link Description', max_length=70, required=False))], help_text='Add either an external or internal link, not both'))])))])), ('teaser_tile', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(max_length=70)), ('tile', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('icon', wagtail.images.blocks.ImageChooserBlock()), ('title', wagtail.blocks.CharBlock(max_length=70)), ('link', wagtail.blocks.PageChooserBlock(page_type=['apps_gruenbuch.GruenbuchDetailPage'])), ('link_description', wagtail.blocks.TextBlock(help_text='describe link for assistive technology if needed', label='Link Description', max_length=70, required=False))])))])), ('paragraph', wagtail.blocks.StructBlock([('body', wagtail.blocks.RichTextBlock(help_text='For accessibility please make sure that you do not\n                            leave out levels when using the headlines. That\n                            means, that there should always be an h2 before\n                            using an h3.', required=True))])), ('faq_accordion', wagtail.blocks.StructBlock([('faq_title', wagtail.blocks.CharBlock(max_length=150, required=False)), ('accordion_items', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(max_length=130, verbose_name='FAQ Question')), ('body', wagtail.blocks.RichTextBlock(help_text='For accessibility please make sure that you do not\n                            leave out levels when using the headlines. That\n                            means, that there should always be an h2 before\n                            using an h3.', required=False, verbose_name='FAQ Answer'))])))])), ('quote', wagtail.blocks.StructBlock([('quote', wagtail.blocks.CharBlock(required=True)), ('author', wagtail.blocks.CharBlock(required=False))])), ('teaser_single', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('title', wagtail.blocks.CharBlock(max_length=130)), ('body', wagtail.blocks.TextBlock(max_length=500)), ('link', wagtail.blocks.StructBlock([('internal_link', wagtail.blocks.PageChooserBlock(required=False)), ('external_link', wagtail.blocks.URLBlock(required=False)), ('link_text', wagtail.blocks.TextBlock(label='Link Text', max_length=50)), ('link_description', wagtail.blocks.TextBlock(help_text='describe link for assistive technology if needed', label='Link Description', max_length=70, required=False))], help_text='Add either an external or internal link, not both'))]))], blank=True, use_json_field=True)),
                ('body_en', wagtail.fields.StreamField([('teaser_columns', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(max_length=130)), ('column_count', wagtail.blocks.ChoiceBlock(choices=[('2', 'two columns'), ('3', 'three columns')], help_text='Only add this number of columns below', icon='cup')), ('column', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('title', wagtail.blocks.CharBlock(max_length=130)), ('body', wagtail.blocks.TextBlock(blank=True, max_length=500, rows=3)), ('button', wagtail.blocks.StructBlock([('internal_link', wagtail.blocks.PageChooserBlock(required=False)), ('external_link', wagtail.blocks.URLBlock(required=False)), ('link_text', wagtail.blocks.TextBlock(label='Link Text', max_length=50)), ('link_description', wagtail.blocks.TextBlock(help_text='describe link for assistive technology if needed', label='Link Description', max_length=70, required=False))], help_text='Add either an external or internal link, not both'))])))])), ('teaser_tile', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(max_length=70)), ('tile', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('icon', wagtail.images.blocks.ImageChooserBlock()), ('title', wagtail.blocks.CharBlock(max_length=70)), ('link', wagtail.blocks.PageChooserBlock(page_type=['apps_gruenbuch.GruenbuchDetailPage'])), ('link_description', wagtail.blocks.TextBlock(help_text='describe link for assistive technology if needed', label='Link Description', max_length=70, required=False))])))])), ('paragraph', wagtail.blocks.StructBlock([('body', wagtail.blocks.RichTextBlock(help_text='For accessibility please make sure that you do not\n                            leave out levels when using the headlines. That\n                            means, that there should always be an h2 before\n                            using an h3.', required=True))])), ('faq_accordion', wagtail.blocks.StructBlock([('faq_title', wagtail.blocks.CharBlock(max_length=150, required=False)), ('accordion_items', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(max_length=130, verbose_name='FAQ Question')), ('body', wagtail.blocks.RichTextBlock(help_text='For accessibility please make sure that you do not\n                            leave out levels when using the headlines. That\n                            means, that there should always be an h2 before\n                            using an h3.', required=False, verbose_name='FAQ Answer'))])))])), ('quote', wagtail.blocks.StructBlock([('quote', wagtail.blocks.CharBlock(required=True)), ('author', wagtail.blocks.CharBlock(required=False))])), ('teaser_single', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('title', wagtail.blocks.CharBlock(max_length=130)), ('body', wagtail.blocks.TextBlock(max_length=500)), ('link', wagtail.blocks.StructBlock([('internal_link', wagtail.blocks.PageChooserBlock(required=False)), ('external_link', wagtail.blocks.URLBlock(required=False)), ('link_text', wagtail.blocks.TextBlock(label='Link Text', max_length=50)), ('link_description', wagtail.blocks.TextBlock(help_text='describe link for assistive technology if needed', label='Link Description', max_length=70, required=False))], help_text='Add either an external or internal link, not both'))]))], blank=True, use_json_field=True)),
                ('body_de_ls', wagtail.fields.StreamField([('teaser_columns', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(max_length=130)), ('column_count', wagtail.blocks.ChoiceBlock(choices=[('2', 'two columns'), ('3', 'three columns')], help_text='Only add this number of columns below', icon='cup')), ('column', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('title', wagtail.blocks.CharBlock(max_length=130)), ('body', wagtail.blocks.TextBlock(blank=True, max_length=500, rows=3)), ('button', wagtail.blocks.StructBlock([('internal_link', wagtail.blocks.PageChooserBlock(required=False)), ('external_link', wagtail.blocks.URLBlock(required=False)), ('link_text', wagtail.blocks.TextBlock(label='Link Text', max_length=50)), ('link_description', wagtail.blocks.TextBlock(help_text='describe link for assistive technology if needed', label='Link Description', max_length=70, required=False))], help_text='Add either an external or internal link, not both'))])))])), ('teaser_tile', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(max_length=70)), ('tile', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('icon', wagtail.images.blocks.ImageChooserBlock()), ('title', wagtail.blocks.CharBlock(max_length=70)), ('link', wagtail.blocks.PageChooserBlock(page_type=['apps_gruenbuch.GruenbuchDetailPage'])), ('link_description', wagtail.blocks.TextBlock(help_text='describe link for assistive technology if needed', label='Link Description', max_length=70, required=False))])))])), ('paragraph', wagtail.blocks.StructBlock([('body', wagtail.blocks.RichTextBlock(help_text='For accessibility please make sure that you do not\n                            leave out levels when using the headlines. That\n                            means, that there should always be an h2 before\n                            using an h3.', required=True))])), ('faq_accordion', wagtail.blocks.StructBlock([('faq_title', wagtail.blocks.CharBlock(max_length=150, required=False)), ('accordion_items', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(max_length=130, verbose_name='FAQ Question')), ('body', wagtail.blocks.RichTextBlock(help_text='For accessibility please make sure that you do not\n                            leave out levels when using the headlines. That\n                            means, that there should always be an h2 before\n                            using an h3.', required=False, verbose_name='FAQ Answer'))])))])), ('quote', wagtail.blocks.StructBlock([('quote', wagtail.blocks.CharBlock(required=True)), ('author', wagtail.blocks.CharBlock(required=False))])), ('teaser_single', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('title', wagtail.blocks.CharBlock(max_length=130)), ('body', wagtail.blocks.TextBlock(max_length=500)), ('link', wagtail.blocks.StructBlock([('internal_link', wagtail.blocks.PageChooserBlock(required=False)), ('external_link', wagtail.blocks.URLBlock(required=False)), ('link_text', wagtail.blocks.TextBlock(label='Link Text', max_length=50)), ('link_description', wagtail.blocks.TextBlock(help_text='describe link for assistive technology if needed', label='Link Description', max_length=70, required=False))], help_text='Add either an external or internal link, not both'))]))], blank=True, use_json_field=True)),
                ('intro_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='apps_images.customimage')),
                ('search_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='apps_images.customimage', verbose_name='Search image')),
            ],
            options={
                'abstract': False,
            },
            bases=(wagtailmetadata.models.WagtailImageMetadataMixin, 'wagtailcore.page', models.Model),
        ),
    ]
