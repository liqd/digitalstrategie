# Generated by Django 3.2.18 on 2023-04-20 16:01

from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields
import wagtail.fields


class Migration(migrations.Migration):

    dependencies = [
        ('apps_images', '0004_alter_customimage_file_hash'),
        ('wagtailcore', '0078_referenceindex'),
        ('apps_measures', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='MeasuresDetailPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('page_title_de', models.CharField(max_length=120)),
                ('page_title_en', models.CharField(blank=True, max_length=120)),
                ('page_title_de_ls', models.CharField(blank=True, max_length=120)),
                ('responsible_organisation_de', models.CharField(max_length=80)),
                ('responsible_organisation_en', models.CharField(blank=True, max_length=80)),
                ('responsible_organisation_de_ls', models.CharField(blank=True, max_length=80)),
                ('involved_organisations_de', models.CharField(blank=True, max_length=300)),
                ('involved_organisations_en', models.CharField(blank=True, max_length=300)),
                ('involved_organisations_de_ls', models.CharField(blank=True, max_length=300)),
                ('districts', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('1', 'gesamtstädtisch'), ('2', 'Charlottenburg-Wilmersdorf'), ('3', 'Friedrichshain-Kreuzberg'), ('4', 'Lichtenberg'), ('5', 'Marzahn-Hellersdorf'), ('6', 'Mitte'), ('7', 'Neukölln'), ('8', 'Pankow'), ('9', 'Reinickendorf'), ('10', 'Spandau'), ('11', 'Steglitz-Zehlendorf'), ('12', 'Tempelhof-Schöneberg'), ('13', 'Treptow-Köpenick')], help_text='Up to 3 choices are allowed.', max_length=29)),
                ('period_de', models.CharField(blank=True, max_length=50)),
                ('period_en', models.CharField(blank=True, max_length=50)),
                ('period_de_ls', models.CharField(blank=True, max_length=50)),
                ('status', models.CharField(blank=True, choices=[('1', 'in planning'), ('2', 'running'), ('3', 'finished')], max_length=1)),
                ('body_de', wagtail.fields.RichTextField()),
                ('body_en', wagtail.fields.RichTextField(blank=True)),
                ('body_de_ls', wagtail.fields.RichTextField(blank=True)),
                ('body_participation_de', wagtail.fields.RichTextField(blank=True)),
                ('body_participation_en', wagtail.fields.RichTextField(blank=True)),
                ('body_participation_de_ls', wagtail.fields.RichTextField(blank=True)),
                ('body_effect_de', wagtail.fields.RichTextField(blank=True)),
                ('body_effect_en', wagtail.fields.RichTextField(blank=True)),
                ('body_effect_de_ls', wagtail.fields.RichTextField(blank=True)),
                ('contact_name', models.CharField(max_length=80)),
                ('contact_email', models.CharField(blank=True, max_length=80)),
                ('contact_phone', models.CharField(blank=True, max_length=20)),
                ('contact_organisation_name_de', models.CharField(max_length=80)),
                ('contact_website_de', models.CharField(blank=True, max_length=20)),
                ('contact_organisation_name_en', models.CharField(blank=True, max_length=80)),
                ('contact_website_en', models.CharField(blank=True, max_length=20)),
                ('contact_organisation_name_de_ls', models.CharField(blank=True, max_length=80)),
                ('contact_website_de_ls', models.CharField(blank=True, max_length=20)),
                ('text_image', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='apps_images.customimage')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
    ]
