# Generated by Django 3.2.18 on 2023-04-19 15:13

from django.db import migrations, models
import django.db.models.deletion
import wagtail.blocks
import wagtail.fields
import wagtail.images.blocks
import wagtailmetadata.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('apps_images', '0004_alter_customimage_file_hash'),
        ('wagtailcore', '0078_referenceindex'),
    ]

    operations = [
        migrations.CreateModel(
            name='MeasuresOverviewPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('page_title_de', models.CharField(max_length=120)),
                ('page_title_en', models.CharField(blank=True, max_length=120)),
                ('page_title_de_ls', models.CharField(blank=True, max_length=120)),
                ('page_intro_de', models.TextField(max_length=200, verbose_name='Page introduction de')),
                ('page_intro_en', models.TextField(blank=True, max_length=200, verbose_name='Page introduction en')),
                ('page_intro_de_ls', models.TextField(blank=True, max_length=200, verbose_name='Page introduction de ls')),
                ('swiper_de', wagtail.fields.StreamField([('image_swiper', wagtail.blocks.StructBlock([('swiper_item', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('title', wagtail.blocks.CharBlock(max_length=130)), ('body', wagtail.blocks.TextBlock(blank=True, max_length=500, rows=3)), ('button', wagtail.blocks.StructBlock([('internal_link', wagtail.blocks.PageChooserBlock(required=False)), ('external_link', wagtail.blocks.URLBlock(required=False)), ('link_text', wagtail.blocks.TextBlock(label='Link Text', max_length=50)), ('link_description', wagtail.blocks.TextBlock(help_text='describe link for assistive technology if needed', label='Link Description', max_length=70, required=False))], help_text='Add either an external or internal link, not both'))], help_text='Please note that images will be displayed in a 16:9 aspect ratio. Crop or resize your images accordingly before uploading to ensure they display correctly.')))]))], use_json_field=True)),
                ('swiper_en', wagtail.fields.StreamField([('image_swiper', wagtail.blocks.StructBlock([('swiper_item', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('title', wagtail.blocks.CharBlock(max_length=130)), ('body', wagtail.blocks.TextBlock(blank=True, max_length=500, rows=3)), ('button', wagtail.blocks.StructBlock([('internal_link', wagtail.blocks.PageChooserBlock(required=False)), ('external_link', wagtail.blocks.URLBlock(required=False)), ('link_text', wagtail.blocks.TextBlock(label='Link Text', max_length=50)), ('link_description', wagtail.blocks.TextBlock(help_text='describe link for assistive technology if needed', label='Link Description', max_length=70, required=False))], help_text='Add either an external or internal link, not both'))], help_text='Please note that images will be displayed in a 16:9 aspect ratio. Crop or resize your images accordingly before uploading to ensure they display correctly.')))]))], blank=True, use_json_field=True)),
                ('swiper_de_ls', wagtail.fields.StreamField([('image_swiper', wagtail.blocks.StructBlock([('swiper_item', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('title', wagtail.blocks.CharBlock(max_length=130)), ('body', wagtail.blocks.TextBlock(blank=True, max_length=500, rows=3)), ('button', wagtail.blocks.StructBlock([('internal_link', wagtail.blocks.PageChooserBlock(required=False)), ('external_link', wagtail.blocks.URLBlock(required=False)), ('link_text', wagtail.blocks.TextBlock(label='Link Text', max_length=50)), ('link_description', wagtail.blocks.TextBlock(help_text='describe link for assistive technology if needed', label='Link Description', max_length=70, required=False))], help_text='Add either an external or internal link, not both'))], help_text='Please note that images will be displayed in a 16:9 aspect ratio. Crop or resize your images accordingly before uploading to ensure they display correctly.')))]))], blank=True, use_json_field=True)),
                ('teaser_de', wagtail.fields.StreamField([('teaser_single', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('title', wagtail.blocks.CharBlock(max_length=130)), ('body', wagtail.blocks.TextBlock(max_length=500)), ('link', wagtail.blocks.StructBlock([('internal_link', wagtail.blocks.PageChooserBlock(required=False)), ('external_link', wagtail.blocks.URLBlock(required=False)), ('link_text', wagtail.blocks.TextBlock(label='Link Text', max_length=50)), ('link_description', wagtail.blocks.TextBlock(help_text='describe link for assistive technology if needed', label='Link Description', max_length=70, required=False))], help_text='Add either an external or internal link, not both'))], help_text='Only add 1 teaser block per overview page.'))], blank=True, use_json_field=True)),
                ('teaser_en', wagtail.fields.StreamField([('teaser_single', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('title', wagtail.blocks.CharBlock(max_length=130)), ('body', wagtail.blocks.TextBlock(max_length=500)), ('link', wagtail.blocks.StructBlock([('internal_link', wagtail.blocks.PageChooserBlock(required=False)), ('external_link', wagtail.blocks.URLBlock(required=False)), ('link_text', wagtail.blocks.TextBlock(label='Link Text', max_length=50)), ('link_description', wagtail.blocks.TextBlock(help_text='describe link for assistive technology if needed', label='Link Description', max_length=70, required=False))], help_text='Add either an external or internal link, not both'))], help_text='Only add 1 teaser block per overview page.'))], blank=True, use_json_field=True)),
                ('teaser_de_ls', wagtail.fields.StreamField([('teaser_single', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('title', wagtail.blocks.CharBlock(max_length=130)), ('body', wagtail.blocks.TextBlock(max_length=500)), ('link', wagtail.blocks.StructBlock([('internal_link', wagtail.blocks.PageChooserBlock(required=False)), ('external_link', wagtail.blocks.URLBlock(required=False)), ('link_text', wagtail.blocks.TextBlock(label='Link Text', max_length=50)), ('link_description', wagtail.blocks.TextBlock(help_text='describe link for assistive technology if needed', label='Link Description', max_length=70, required=False))], help_text='Add either an external or internal link, not both'))], help_text='Only add 1 teaser block per overview page.'))], blank=True, use_json_field=True)),
                ('search_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='apps_images.customimage', verbose_name='Search image')),
            ],
            options={
                'abstract': False,
            },
            bases=(wagtailmetadata.models.WagtailImageMetadataMixin, 'wagtailcore.page', models.Model),
        ),
    ]
