# Generated by Django 3.2.19 on 2023-05-17 07:46

from django.db import migrations


def copy_old_metatag_info(apps, schema_editor):
    HomePage = apps.get_model('apps_home', 'HomePage')
    for page in HomePage.objects.all():
        if not page.meta_title_de:
            page.meta_title_de = page.seo_title
            page.save()
        if not page.meta_description_de:
            page.meta_description_de = page.search_description
            page.save()

    OverviewPage = apps.get_model('apps_home', 'OverviewPage')
    for page in OverviewPage.objects.all():
        if not page.meta_title_de:
            page.meta_title_de = page.seo_title
            page.save()
        if not page.meta_description_de:
            page.meta_description_de = page.search_description
            page.save()

    MicrositeOverviewPage = apps.get_model('apps_home', 'MicrositeOverviewPage')
    for page in MicrositeOverviewPage.objects.all():
        if not page.meta_title_de:
            page.meta_title_de = page.seo_title
            page.save()
        if not page.meta_description_de:
            page.meta_description_de = page.search_description
            page.save()


def remove_old_metatag_info(apps, schema_editor):
    HomePage = apps.get_model('apps_home', 'HomePage')
    for page in HomePage.objects.all():
        if page.meta_title_de == page.seo_title:
            page.meta_title_de = ""
            page.save()
        if page.meta_description_de == page.search_description:
            page.meta_description_de = ""
            page.save()

    OverviewPage = apps.get_model('apps_home', 'OverviewPage')
    for page in OverviewPage.objects.all():
        if not page.meta_title_de:
            page.meta_title_de = page.seo_title
            page.save()
        if not page.meta_description_de:
            page.meta_description_de = page.search_description
            page.save()

    MicrositeOverviewPage = apps.get_model('apps_home', 'MicrositeOverviewPage')
    for page in MicrositeOverviewPage.objects.all():
        if not page.meta_title_de:
            page.meta_title_de = page.seo_title
            page.save()
        if not page.meta_description_de:
            page.meta_description_de = page.search_description
            page.save()


class Migration(migrations.Migration):

    dependencies = [
        ('apps_home', '0066_add_translatable_metatag_fields'),
    ]

    operations = [
        migrations.RunPython(
            copy_old_metatag_info,
            reverse_code=remove_old_metatag_info
        )
    ]
